/**
 * Copyright &copy; 2012-2016 <a href="https://github.com/thinkgem/jeesite">JeeSite</a> All rights reserved.
 */
package com.thinkgem.jeesite.modules.witcm.business.web;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.thinkgem.jeesite.common.config.Global;
import com.thinkgem.jeesite.common.persistence.Page;
import com.thinkgem.jeesite.common.web.BaseController;
import com.thinkgem.jeesite.common.utils.StringUtils;
import com.thinkgem.jeesite.modules.witcm.business.entity.Promotion;
import com.thinkgem.jeesite.modules.witcm.business.service.PromotionService;

/**
 * 促销Controller
 * @author liyongfang
 * @version 2017-12-06
 */
@Controller
@RequestMapping(value = "${adminPath}/business/promotion")
public class PromotionController extends BaseController {

	@Autowired
	private PromotionService promotionService;
	
	@ModelAttribute
	public Promotion get(@RequestParam(required=false) String id) {
		Promotion entity = null;
		if (StringUtils.isNotBlank(id)){
			entity = promotionService.get(id);
		}
		if (entity == null){
			entity = new Promotion();
		}
		return entity;
	}
	
	@RequiresPermissions("business:promotion:view")
	@RequestMapping(value = {"list", ""})
	public String list(Promotion promotion, HttpServletRequest request, HttpServletResponse response, Model model) {
		Page<Promotion> page = promotionService.findPage(new Page<Promotion>(request, response), promotion); 
		model.addAttribute("page", page);
		return "witcm/business/promotionList";
	}
	
	@RequiresPermissions("business:promotion:view")
	@RequestMapping(value = {"blist"})
	public String blist(Promotion promotion, HttpServletRequest request, HttpServletResponse response, Model model) {
		Page<Promotion> page = promotionService.findPage(new Page<Promotion>(request, response), promotion); 
		model.addAttribute("page", page);
		return "witcm/business/bpromotionList";
	}

	@RequiresPermissions("business:promotion:view")
	@RequestMapping(value = "form")
	public String form(Promotion promotion, Model model) {
		model.addAttribute("promotion", promotion);
		return "witcm/business/promotionForm";
	}
	
	@RequiresPermissions("business:promotion:view")
	@RequestMapping(value = "bform")
	public String bform(Promotion promotion, Model model) {
		model.addAttribute("promotion", promotion);
		return "witcm/business/bpromotionForm";
	}

	@RequiresPermissions("business:promotion:edit")
	@RequestMapping(value = "save")
	public String save(Promotion promotion, Model model, RedirectAttributes redirectAttributes) {
		if (!beanValidator(model, promotion)){
			return form(promotion, model);
		}
		promotionService.save(promotion);
		addMessage(redirectAttributes, "保存促销成功");
		return "redirect:"+Global.getAdminPath()+"/business/promotion/?repage";
	}
	
	@RequiresPermissions("business:promotion:edit")
	@RequestMapping(value = "bsave")
	public String bsave(Promotion promotion, Model model, RedirectAttributes redirectAttributes) {
		if (!beanValidator(model, promotion)){
			return form(promotion, model);
		}
		promotionService.save(promotion);
		addMessage(redirectAttributes, "保存促销成功");
		return "redirect:"+Global.getAdminPath()+"/business/promotion/blist?repage&business.id="+promotion.getBusiness().getId();
	}
	
	@RequiresPermissions("business:promotion:edit")
	@RequestMapping(value = "delete")
	public String delete(Promotion promotion, RedirectAttributes redirectAttributes) {
		promotionService.delete(promotion);
		addMessage(redirectAttributes, "删除促销成功");
		return "redirect:"+Global.getAdminPath()+"/business/promotion/?repage";
	}

}