package com.thinkgem.jeesite.modules.cms.web.front;



import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.thinkgem.jeesite.common.constants.Constants;
import com.thinkgem.jeesite.common.persistence.Page;
import com.thinkgem.jeesite.common.security.MD5Util;
import com.thinkgem.jeesite.common.web.BaseController;
import com.thinkgem.jeesite.modules.cms.entity.Site;
import com.thinkgem.jeesite.modules.cms.service.SiteService;
import com.thinkgem.jeesite.modules.cms.utils.CmsUtils;
import com.thinkgem.jeesite.modules.sys.utils.UserUtils;
import com.thinkgem.jeesite.modules.witcm.business.entity.Orders;
import com.thinkgem.jeesite.modules.witcm.business.service.OrdersService;
import com.thinkgem.jeesite.modules.witcm.resident.entity.Collect;
import com.thinkgem.jeesite.modules.witcm.resident.entity.Family;
import com.thinkgem.jeesite.modules.witcm.resident.entity.HealthRecord;
import com.thinkgem.jeesite.modules.witcm.resident.entity.Resident;
import com.thinkgem.jeesite.modules.witcm.resident.service.CollectService;
import com.thinkgem.jeesite.modules.witcm.resident.service.FamilyService;
import com.thinkgem.jeesite.modules.witcm.resident.service.HealthRecordService;
import com.thinkgem.jeesite.modules.witcm.resident.service.ResidentService;

/**
 * 个人中心Controller
 * @author luoyang
 * @version 2017-12-10
 */
@Controller
@RequestMapping(value = "${frontPath}/res")
public class FrontResController extends BaseController{
	@Autowired
	private SiteService siteService;
	@Autowired
	private ResidentService residentService;
	@Autowired
	private FamilyService familyService;
	@Autowired
	private HealthRecordService healthRecordService;
	@Autowired
	private CollectService collectService;
	@Autowired
	private OrdersService ordersService;
	
	/**
	 * 登录
	 */
	@ResponseBody
	@RequestMapping(value = "loginAjax.do")
	public Map<String,Object> login(String userName,String password) {
		Map<String,Object> map = new HashMap<String, Object>();
		if(StringUtils.isEmpty(userName)){
			map.put("result", false);
			map.put("msg", "请输入手机号");
			return map;
		}
		if(StringUtils.isEmpty(password)){
			map.put("result", false);
			map.put("msg", "请输入密码");
			return map;
		}
		password = MD5Util.getMD5(password);
		Resident resident = residentService.findByTelAndPswd(userName, password);
		if(resident==null){
			map.put("result", false);
			map.put("msg", "手机号或密码错误，请重新输入");
			return map;
		}
		resident.setLoginPswd("");
		UserUtils.getSession().setAttribute(Constants.RES_USER_KEY, resident);
		map.put("result", true);
		return map;
	}
	
	/**
	 * 个人信息
	 */
	@RequestMapping(value = "resInfo")
	public String resInfo(Model model) {
		Site site = CmsUtils.getSite(Site.defaultSiteId());
		model.addAttribute("site", site);
		//判断是否登录
		Resident resident = (Resident) UserUtils.getSession().getAttribute(Constants.RES_USER_KEY);
		if(resident==null || StringUtils.isEmpty(resident.getId())){
			return "modules/cms/front/themes/"+site.getTheme()+"/login";
		}

		model.addAttribute("resident", resident);
		return "modules/cms/front/themes/"+site.getTheme()+"/resInfo";
	}
	
	/**
	 * 家庭档案-list
	 */
	@RequestMapping(value = "resFamily")
	public String resFamily(Family family, HttpServletRequest request, HttpServletResponse response, Model model) {
		Site site = CmsUtils.getSite(Site.defaultSiteId());
		model.addAttribute("site", site);
		//判断是否登录
		Resident resident = (Resident) UserUtils.getSession().getAttribute(Constants.RES_USER_KEY);
		if(resident==null || StringUtils.isEmpty(resident.getId())){
			return "modules/cms/front/themes/"+site.getTheme()+"/login";
		}
		family.setResident(resident);
		Page<Family> page = familyService.findPage(new Page<Family>(request,response), family); 
		model.addAttribute("page", page);
		return "modules/cms/front/themes/"+site.getTheme()+"/resFamilyList";
	}
	
	/**
	 * 家庭档案修改-form
	 */
	@RequestMapping(value = "resFamilyForm")
	public String resFamilyForm(Model model) {
		Site site = CmsUtils.getSite(Site.defaultSiteId());
		model.addAttribute("site", site);
		//判断是否登录
		Resident resident = (Resident) UserUtils.getSession().getAttribute(Constants.RES_USER_KEY);
		if(resident==null || StringUtils.isEmpty(resident.getId())){
			return "modules/cms/front/themes/"+site.getTheme()+"/login";
		}
		
		return "modules/cms/front/themes/"+site.getTheme()+"/resFamilyForm";
	}
	
	/**
	 * 健康档案-list
	 */
	@RequestMapping(value = "resHealth")
	public String resHealth(HealthRecord healthRecord, HttpServletRequest request, HttpServletResponse response, Model model) {
		Site site = CmsUtils.getSite(Site.defaultSiteId());
		model.addAttribute("site", site);
		//判断是否登录
		Resident resident = (Resident) UserUtils.getSession().getAttribute(Constants.RES_USER_KEY);
		if(resident==null || StringUtils.isEmpty(resident.getId())){
			return "modules/cms/front/themes/"+site.getTheme()+"/login";
		}
		
		Page<HealthRecord> page = healthRecordService.findPage(new Page<HealthRecord>(request, response), healthRecord);
		model.addAttribute("page", page);
		return "modules/cms/front/themes/"+site.getTheme()+"/resHealthList";
	}
	
	/**
	 * 个人积分－form
	 */
	@RequestMapping(value = "resPoint")
	public String resPoint(Model model) {
		Site site = CmsUtils.getSite(Site.defaultSiteId());
		model.addAttribute("site", site);
		//判断是否登录
		Resident resident = (Resident) UserUtils.getSession().getAttribute(Constants.RES_USER_KEY);
		if(resident==null || StringUtils.isEmpty(resident.getId())){
			return "modules/cms/front/themes/"+site.getTheme()+"/login";
		}
		
		return "modules/cms/front/themes/"+site.getTheme()+"/resPoint";
	}
	
	/**
	 * 个人收藏－list
	 */
	@RequestMapping(value = "resCollect")
	public String resCollect(Collect collect, HttpServletRequest request, HttpServletResponse response, Model model) {
		Site site = CmsUtils.getSite(Site.defaultSiteId());
		model.addAttribute("site", site); 
		//判断是否登录
		Resident resident = (Resident) UserUtils.getSession().getAttribute(Constants.RES_USER_KEY);
		if(resident==null || StringUtils.isEmpty(resident.getId())){
			return "modules/cms/front/themes/"+site.getTheme()+"/login";
		}
		collect.setResident(resident);
		Page<Collect> page = collectService.findPage(new Page<Collect>(request, response), collect);
		model.addAttribute("page", page);
		return "modules/cms/front/themes/"+site.getTheme()+"/resCollectList";
	}
	
	/**
	 * 预订商家－list
	 */
	@RequestMapping(value = "resOrder")
	public String resOrder(Orders orders, HttpServletRequest request, HttpServletResponse response, Model model) {
		Site site = CmsUtils.getSite(Site.defaultSiteId());
		model.addAttribute("site", site);
		//判断是否登录
		Resident resident = (Resident) UserUtils.getSession().getAttribute(Constants.RES_USER_KEY);
		if(resident==null || StringUtils.isEmpty(resident.getId())){
			return "modules/cms/front/themes/"+site.getTheme()+"/login";
		}
		
		Page<Orders> page = ordersService.findPage(new Page<Orders>(request, response), orders); 
		model.addAttribute("page", page);
		return "modules/cms/front/themes/"+site.getTheme()+"/resOrderList";
	}
	
	/**
	 * 密码修改－form
	 */
	@RequestMapping(value = "resPswd")
	public String resPswdForm(Model model) {
		Site site = CmsUtils.getSite(Site.defaultSiteId());
		model.addAttribute("site", site);
		//判断是否登录
		Resident resident = (Resident) UserUtils.getSession().getAttribute(Constants.RES_USER_KEY);
		if(resident==null || StringUtils.isEmpty(resident.getId())){
			return "modules/cms/front/themes/"+site.getTheme()+"/login";
		}
		
		return "modules/cms/front/themes/"+site.getTheme()+"/resPswdForm";
	}
	
	
}
